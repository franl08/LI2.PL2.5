<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="camada__de__dados_8h" kind="file" language="C++">
    <compoundname>camada_de_dados.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includedby refid="camada__de__dados_8c" local="yes">camada_de_dados.c</includedby>
    <includedby refid="camada__de__interface_8c" local="yes">camada_de_interface.c</includedby>
    <includedby refid="logica__do__programa_8c" local="yes">logica_do_programa.c</includedby>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <incdepgraph>
      <node id="7">
        <label>camada_de_dados.h</label>
        <link refid="camada__de__dados_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structCOORDENADA" prot="public">COORDENADA</innerclass>
    <innerclass refid="structJOGADA" prot="public">JOGADA</innerclass>
    <innerclass refid="structESTADO" prot="public">ESTADO</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039" prot="public" static="no">
        <name>CASA</name>
        <enumvalue id="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039abc711f491a56ec7af7a688be508c5113" prot="public">
          <name>VAZIO</name>
          <initializer>= &apos;.&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Casa vazia </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039ad24485fddec75419fd4a0cc9edda0ca5" prot="public">
          <name>BRANCA</name>
          <initializer>= &apos;*&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Casa atual </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="camada__de__dados_8h_1aba91601f16d4c485b2d9b8c429f27039a007278eb3827d19891b47cdd3ac8846d" prot="public">
          <name>PRETA</name>
          <initializer>= &apos;#&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Casa para a qual não pode jogar </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Tipos de dados que uma casa pode assumir Uma casa na qual esteja um jogador é BRANCA, na qual já tenha passsado um jogador é PRETA, se não reunir nenhuma das condições anteriores é VAZIA. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="16" column="1" bodyfile="camada_de_dados.h" bodystart="16" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="camada__de__dados_8h_1a94c221d29a1760f008b7834093259b7d" prot="public" static="no">
        <type><ref refid="structJOGADA" kindref="compound">JOGADA</ref></type>
        <definition>typedef JOGADA JOGADAS[32]</definition>
        <argsstring>[32]</argsstring>
        <name>JOGADAS</name>
        <briefdescription>
<para>Tipo de dados para guardar todas as jogadas efetuadas por um determinado jogador, o número máximo de jogadas possíveis são 32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="48" column="1" bodyfile="camada_de_dados.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="camada__de__dados_8h_1a7e0c7e26fb685d9ab501e19b05e6954f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
        <definition>ESTADO* inicializar_estado</definition>
        <argsstring>()</argsstring>
        <name>inicializar_estado</name>
        <briefdescription>
<para>Função para criar o estado vazio. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>O novo estado </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="78" column="1" bodyfile="camada_de_dados.c" bodystart="42" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a519e038fa40377b08305a4c721453d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void inicializar_tabuleiro</definition>
        <argsstring>(CASA tab[8][8])</argsstring>
        <name>inicializar_tabuleiro</name>
        <param>
          <type>CASA</type>
          <declname>tab</declname>
          <array>[8][8]</array>
        </param>
        <briefdescription>
<para>Função para inicializar o tabuleiro. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tab</parametername>
</parameternamelist>
<parameterdescription>
<para>Tabuleiro </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="84" column="1" bodyfile="camada_de_dados.c" bodystart="10" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_jogador_atual</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>obter_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
<para>Função para obter o número do jogador atual. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estado</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O número do jogador atual </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="91" column="1" bodyfile="camada_de_dados.c" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a6cd0b387bdee9e18003c78852394aa63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_numero_de_jogadas</definition>
        <argsstring>(ESTADO *estado)</argsstring>
        <name>obter_numero_de_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
<para>Função para obter o número de jogadas efetuadas (cada jogada tem o movimento de dois jogadores) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estado</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O número de jogadas efetuadas </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="98" column="1" bodyfile="camada_de_dados.c" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a0ed6b059967a9235fa62c7691203606a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CASA</type>
        <definition>CASA obter_estado_casa</definition>
        <argsstring>(CASA tab[8][8], COORDENADA c)</argsstring>
        <name>obter_estado_casa</name>
        <param>
          <type>CASA</type>
          <declname>tab</declname>
          <array>[8][8]</array>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função para obter o estado de uma casa. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tab</parametername>
</parameternamelist>
<parameterdescription>
<para>O tabuleiro </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O estado da casa </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="106" column="1" bodyfile="camada_de_dados.c" bodystart="33" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a37422da20c66c350333f92bae973a3f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void atualiza_estado_jogo</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>atualiza_estado_jogo</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que atualiza o estado de jogo após cada jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>A coordenada </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="113" column="1" bodyfile="camada_de_dados.c" bodystart="54" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ade5d6f16f7840c944079b80da9ad5b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void incrementa_num_comandos</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>incrementa_num_comandos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que incrementa o número de comandos. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="119" column="1" bodyfile="camada_de_dados.c" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a38d349b0eab9c1249c89d3d03c6e1269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_num_comandos</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_num_comandos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função para obter o número atual de comandos, utilizado no prompt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O número de comandos atual </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="126" column="1" bodyfile="camada_de_dados.c" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a1d0036d2753e8f2d79221be69106c62c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void modifica_num_jogadas</definition>
        <argsstring>(ESTADO *e, int numJogadas)</argsstring>
        <name>modifica_num_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numJogadas</declname>
        </param>
        <briefdescription>
<para>Função para alterar o valor do número de jogadas, para quebrar o loop no main e para terminar o programa. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numJogadas</parametername>
</parameternamelist>
<parameterdescription>
<para>O número de jogadas atuais </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="133" column="1" bodyfile="camada_de_dados.c" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a40555aff97afc67bd1866f2785111310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA obter_ultima_jogada</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_ultima_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função para obter a última jogada efetuada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A última jogada efetuada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="140" column="1" bodyfile="camada_de_dados.c" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ae0d7061c4156a335fb19d754f9e777d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void grava_dados</definition>
        <argsstring>(ESTADO *e, char *file_name)</argsstring>
        <name>grava_dados</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Função para gravar os dados atuais do tabuleiro (quando utilizado o comando gr) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Nome do ficheiro que vai ser criado </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="147" column="1" bodyfile="camada_de_dados.c" bodystart="136" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a234a404296dbefe6bffde35db541d51f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int obter_numero_movimentos</definition>
        <argsstring>(ESTADO *e, int jogador)</argsstring>
        <name>obter_numero_movimentos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <briefdescription>
<para>Função para obter uma jogada do Array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>Número do jogador </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O número de movimentos do jogador </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="156" column="1" bodyfile="camada_de_dados.c" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a2a31e8e2f9cf25c4e5e8a555c81e091c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structJOGADA" kindref="compound">JOGADA</ref></type>
        <definition>JOGADA obter_estado_jogada</definition>
        <argsstring>(ESTADO *e, int num_jogadas)</argsstring>
        <name>obter_estado_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_jogadas</declname>
        </param>
        <briefdescription>
<para>Função para obter uma jogada do Array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_jogadas</parametername>
</parameternamelist>
<parameterdescription>
<para>Número atual de jogadas </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Jogada desejada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="164" column="1" bodyfile="camada_de_dados.c" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1abc69abc6923d55fa24d5d756ee809435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mudar_jogador_atual</definition>
        <argsstring>(ESTADO *e, int jogador)</argsstring>
        <name>mudar_jogador_atual</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <briefdescription>
<para>Função para mudar para o outro jogador. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>Número do jogador </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="171" column="1" bodyfile="camada_de_dados.c" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ac513714cdb4fb130ad6115e4cf4f6564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void altera_ultima_jogada</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>altera_ultima_jogada</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função para alterar a última jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="178" column="1" bodyfile="camada_de_dados.c" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a3cef1ce5bce2aac553882339c0f742cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void altera_movimentos_j1</definition>
        <argsstring>(ESTADO *e, int mov_j1)</argsstring>
        <name>altera_movimentos_j1</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mov_j1</declname>
        </param>
        <briefdescription>
<para>Função para alterar o número de movimentos do jogador 1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mov_j1</parametername>
</parameternamelist>
<parameterdescription>
<para>Novo número de movimentos do jogador 1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="185" column="1" bodyfile="camada_de_dados.c" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a2c11be2891bb52a9b920415bbc4fbd36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void altera_movimentos_j2</definition>
        <argsstring>(ESTADO *e, int mov_j2)</argsstring>
        <name>altera_movimentos_j2</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mov_j2</declname>
        </param>
        <briefdescription>
<para>Função para alterar o número de movimentos do jogador 2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mov_j2</parametername>
</parameternamelist>
<parameterdescription>
<para>Novo número de movimentos do jogador 2 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="192" column="1" bodyfile="camada_de_dados.c" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1af287c2f9d23418e7b38168dcbd7222ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void altera_estado_casa</definition>
        <argsstring>(ESTADO *e, COORDENADA posicao, char estado)</argsstring>
        <name>altera_estado_casa</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>posicao</declname>
        </param>
        <param>
          <type>char</type>
          <declname>estado</declname>
        </param>
        <briefdescription>
<para>Função para alterar o estado que uma determinada casa está </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>posicao</parametername>
</parameternamelist>
<parameterdescription>
<para>Casa a ser alterada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>estado</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado da casa </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="200" column="1" bodyfile="camada_de_dados.c" bodystart="114" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ab14c6cb59b5cbbd9a05f8a471ff44b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void altera_array_jogadas</definition>
        <argsstring>(ESTADO *e, COORDENADA mov, int jogada, int jogador)</argsstring>
        <name>altera_array_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>mov</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogada</declname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <briefdescription>
<para>Função para alterar uma jogada no array jogadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mov</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada da jogada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogada</parametername>
</parameternamelist>
<parameterdescription>
<para>Número da jogada para ser alterada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>Número do jogador </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="209" column="1" bodyfile="camada_de_dados.c" bodystart="129" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ae2ba0aa85a3e065ef292e1f666ece8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ler_tabuleiro</definition>
        <argsstring>(ESTADO *e, FILE *f_pointer)</argsstring>
        <name>ler_tabuleiro</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>f_pointer</declname>
        </param>
        <briefdescription>
<para>Função para ler o tabuleiro de um ficheiro. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Nome do ficheiro para ler o tabuleiro </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O inteiro 1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="217" column="1" bodyfile="camada_de_dados.c" bodystart="145" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1aed53970f98d13646eb42b86536acd582" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler_movs</definition>
        <argsstring>(ESTADO *e, FILE *f_pointer)</argsstring>
        <name>ler_movs</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>f_pointer</declname>
        </param>
        <briefdescription>
<para>Função para ler os movs de um ficheiro. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Nome do ficheiro para ler os movs </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="224" column="1" bodyfile="camada_de_dados.c" bodystart="157" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1aaf81766175bc061ea1deb4b4d5bcf016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reinicia_pos</definition>
        <argsstring>(ESTADO *e, int pos, JOGADA *jog)</argsstring>
        <name>reinicia_pos</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="structJOGADA" kindref="compound">JOGADA</ref> *</type>
          <declname>jog</declname>
        </param>
        <briefdescription>
<para>Função para reinicir o pos. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Número fornecido ao pos </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jog</parametername>
</parameternamelist>
<parameterdescription>
<para>Array das Jogadas </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="232" column="1" bodyfile="camada_de_dados.c" bodystart="190" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1a2362774c3566a31762c24b44a56b598c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structJOGADA" kindref="compound">JOGADA</ref> *</type>
        <definition>JOGADA* obter_array_jogadas</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>obter_array_jogadas</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função para obter o array das jogadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado atual </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O array das Jogadas </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="239" column="1" bodyfile="camada_de_dados.c" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="camada__de__dados_8h_1ae3a752a6ca926f49ceaeb54c96478aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int switch_player</definition>
        <argsstring>(int jogador)</argsstring>
        <name>switch_player</name>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <briefdescription>
<para>Função para alterar o jogador para o próximo. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>O número do jogador atual </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O número do próximo jogador </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="camada_de_dados.h" line="246" column="1" bodyfile="camada_de_dados.c" bodystart="222" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>BOT_CAMADA_DE_DADOS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOT_CAMADA_DE_DADOS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>VAZIO<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>BRANCA<sp/>=<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>PRETA<sp/>=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/>CASA;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structCOORDENADA" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="structCOORDENADA_1adfbc8d4856ce807139fdf62e00aed29a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCOORDENADA_1adfbc8d4856ce807139fdf62e00aed29a" kindref="member">coluna</ref>;</highlight></codeline>
<codeline lineno="32" refid="structCOORDENADA_1aefe14bcc5a066ac3b21500cc3d28c06f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structCOORDENADA_1aefe14bcc5a066ac3b21500cc3d28c06f" kindref="member">linha</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structJOGADA" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40" refid="structJOGADA_1a93d9306cb0c49b66b7d9a615bffe0149" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="structJOGADA_1a93d9306cb0c49b66b7d9a615bffe0149" kindref="member">jogador1</ref>;</highlight></codeline>
<codeline lineno="42" refid="structJOGADA_1ab46b16dfbdc7f2af9430c8dcdac0914b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="structJOGADA_1ab46b16dfbdc7f2af9430c8dcdac0914b" kindref="member">jogador2</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/><ref refid="structJOGADA" kindref="compound">JOGADA</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structJOGADA" kindref="compound">JOGADA</ref><sp/>JOGADAS[32];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structESTADO" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55" refid="structESTADO_1ab56f0f1be16954d3768b4174d14c087d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>CASA<sp/>tab[8][8];</highlight></codeline>
<codeline lineno="57" refid="structESTADO_1a4896a5c5c1f40b43fb795623327e3f47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="structESTADO_1a4896a5c5c1f40b43fb795623327e3f47" kindref="member">ultima_jogada</ref>;</highlight></codeline>
<codeline lineno="59" refid="structESTADO_1afae43b87a488fad0f2b56a18bad31d18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>JOGADAS<sp/><ref refid="structESTADO_1afae43b87a488fad0f2b56a18bad31d18" kindref="member">jogadas</ref>;</highlight></codeline>
<codeline lineno="61" refid="structESTADO_1a261495728744647e618b4e623f5a4b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1a261495728744647e618b4e623f5a4b7a" kindref="member">num_jogadas</ref>;</highlight></codeline>
<codeline lineno="63" refid="structESTADO_1a5dd28e2e68b7aef2b6b7ea88e02eff58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1a5dd28e2e68b7aef2b6b7ea88e02eff58" kindref="member">jogador_atual</ref>;</highlight></codeline>
<codeline lineno="65" refid="structESTADO_1abe6faacdd6111160bf9a354f44b95b38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1abe6faacdd6111160bf9a354f44b95b38" kindref="member">num_comandos</ref>;</highlight></codeline>
<codeline lineno="67" refid="structESTADO_1a48e60cf831e7351c8d0afae433f3c674" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1a48e60cf831e7351c8d0afae433f3c674" kindref="member">movimentos_j1</ref>;</highlight></codeline>
<codeline lineno="69" refid="structESTADO_1a21a8bb9b8cb21ffc06256242516f5a67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structESTADO_1a21a8bb9b8cb21ffc06256242516f5a67" kindref="member">movimentos_j2</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*inicializar_estado();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>inicializar_tabuleiro(CASA<sp/>tab[8][8]);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obter_jogador_atual(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obter_numero_de_jogadas(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*estado);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">CASA<sp/>obter_estado_casa(CASA<sp/>tab[8][8],<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atualiza_estado_jogo<sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>incrementa_num_comandos(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obter_num_comandos(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>modifica_num_jogadas<sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numJogadas);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>obter_ultima_jogada(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>grava_dados(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e<sp/>,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*file_name<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>obter_numero_movimentos(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="structJOGADA" kindref="compound">JOGADA</ref><sp/>obter_estado_jogada(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e<sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_jogadas);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mudar_jogador_atual<sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>altera_ultima_jogada(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e<sp/>,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>altera_movimentos_j1<sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mov_j1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>altera_movimentos_j2<sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mov_j2);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>altera_estado_casa(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>posicao,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>estado);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>altera_array_jogadas(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>mov,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogada,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ler_tabuleiro(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e<sp/>,<sp/>FILE<sp/>*<sp/>f_pointer);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ler_movs(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*<sp/>e,<sp/>FILE<sp/>*<sp/>f_pointer);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reinicia_pos<sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/><ref refid="structJOGADA" kindref="compound">JOGADA</ref><sp/>*jog);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="structJOGADA" kindref="compound">JOGADA</ref><sp/>*obter_array_jogadas<sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>switch_player(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="camada_de_dados.h"/>
  </compounddef>
</doxygen>
